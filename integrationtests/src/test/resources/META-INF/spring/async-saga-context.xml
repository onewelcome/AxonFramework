<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2012. Axon Framework
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:axon="http://www.axonframework.org/schema/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.axonframework.org/schema/core http://www.axonframework.org/schema/axon-core.xsd">

    <context:annotation-config/>

    <!-- Serializer with proper security configuration -->
    <bean class="org.axonframework.integrationtests.SpringConfiguration"/>

    <axon:saga-manager id="sagaManager" event-bus="eventBus" saga-repository="jpaSagaRepository">
        <axon:async transaction-manager="transactionManager"/>
        <axon:types>
            org.axonframework.integrationtests.saga.AsyncSaga
        </axon:types>
    </axon:saga-manager>

    <axon:jpa-saga-repository id="jpaSagaRepository" use-explicit-flush="true" saga-serializer="serializer"/>

    <bean class="org.axonframework.eventhandling.annotation.AnnotationEventListenerBeanPostProcessor"/>

    <bean class="org.axonframework.commandhandling.annotation.AnnotationCommandHandlerBeanPostProcessor">
        <property name="commandBus" ref="commandBus"/>
    </bean>

    <bean id="commandBus" class="org.axonframework.commandhandling.SimpleCommandBus">
        <property name="transactionManager">
            <bean class="org.axonframework.unitofwork.SpringTransactionManager">
                <property name="transactionManager" ref="transactionManager"/>
            </bean>
        </property>
    </bean>

    <bean id="eventBus" class="org.axonframework.eventhandling.SimpleEventBus"/>

    <axon:jpa-event-store id="eventStore"/>

    <bean id="executor" class="org.axonframework.integrationtests.saga.ExecutorServiceFactoryBean"/>

    <!-- Database configuration -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:hsqldb.database.properties"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="integrationtest"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="databasePlatform" value="${hibernate.sql.dialect}"/>
                <property name="generateDdl" value="${hibernate.sql.generateddl}"/>
                <property name="showSql" value="${hibernate.sql.show}"/>
            </bean>
        </property>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="driverClassName" value="${jdbc.driverclass}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maximumPoolSize" value="150"/>
        <property name="minimumIdle" value="50"/>
        <property name="poolName" value="HikariCP"/>
    </bean>

</beans>
